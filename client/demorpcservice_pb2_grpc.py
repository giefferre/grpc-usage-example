# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import demorpcservice_pb2 as demorpcservice__pb2


class DemoRPCServiceStub(object):
  """The DemoRPCService offers methods to create and read Persons.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CreatePerson = channel.unary_unary(
        '/DemoRPCService/CreatePerson',
        request_serializer=demorpcservice__pb2.CreatePersonArgs.SerializeToString,
        response_deserializer=demorpcservice__pb2.Person.FromString,
        )
    self.ReadPerson = channel.unary_unary(
        '/DemoRPCService/ReadPerson',
        request_serializer=demorpcservice__pb2.ReadPersonArgs.SerializeToString,
        response_deserializer=demorpcservice__pb2.Person.FromString,
        )


class DemoRPCServiceServicer(object):
  """The DemoRPCService offers methods to create and read Persons.
  """

  def CreatePerson(self, request, context):
    """Creates a Person
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ReadPerson(self, request, context):
    """Reads a Person
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DemoRPCServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CreatePerson': grpc.unary_unary_rpc_method_handler(
          servicer.CreatePerson,
          request_deserializer=demorpcservice__pb2.CreatePersonArgs.FromString,
          response_serializer=demorpcservice__pb2.Person.SerializeToString,
      ),
      'ReadPerson': grpc.unary_unary_rpc_method_handler(
          servicer.ReadPerson,
          request_deserializer=demorpcservice__pb2.ReadPersonArgs.FromString,
          response_serializer=demorpcservice__pb2.Person.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'DemoRPCService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
